<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Meeting-Mapper">

	<select id="selectMeetingSequenceNextValue" resultType="int">
		SELECT
		MEETING_SEQ.NEXTVAL FROM DUAL
	</select>

	<!-- 프로젝트별 회의 리스트 -->
	<select id="selectMeetingListByProject"
		parameterType="com.Semicolon.command.PageMaker"
		resultType="com.Semicolon.dto.MeetingVO">
		SELECT
		ID,
		PROJECT_ID AS projectId,
		MEETINGDATE AS
		meetingDate,
		TITLE AS title,
		AUTHOR AS author,
		ATTEND AS attend,
		OVERVIEW
		AS overview,
		CONTENT AS content,
		STATUS AS status
		FROM MEETING
		WHERE
		PROJECT_ID = #{projectId}
		ORDER BY MEETINGDATE DESC
	</select>

	<!-- 프로젝트별 회의 수 -->
	<select id="selectMeetingListByProjectCount"
		parameterType="com.Semicolon.command.PageMaker" resultType="int">
		SELECT
		COUNT(*)
		FROM MEETING
		WHERE PROJECT_ID = #{projectId}
	</select>

	<!-- 단일 회의 조회 -->
	<select id="selectMeetingById" parameterType="int"
		resultType="com.Semicolon.dto.MeetingVO">
		SELECT
		ID,
		PROJECT_ID AS projectId,
		MEETINGDATE AS meetingDate,
		AUTHOR AS author,
		ATTEND AS attend,
		TITLE AS title,
		OVERVIEW AS overview,
		CONTENT AS content,
		STATUS AS status
		FROM MEETING
		WHERE ID = #{id}
	</select>

	<!-- 회의 등록 -->
	<insert id="insertMeeting"
		parameterType="com.Semicolon.dto.MeetingVO">
		INSERT INTO MEETING (ID, PROJECT_ID, MEETINGDATE, TITLE,
		AUTHOR, ATTEND,
		OVERVIEW, CONTENT)
		VALUES (#{id}, #{projectId},
		#{meetingDate}, #{title}, #{author},
		#{attend}, #{overview},
		#{content})
	</insert>

	<!-- 회의 수정 -->
	<update id="updateMeeting"
		parameterType="com.Semicolon.dto.MeetingVO">
		UPDATE MEETING
		SET MEETINGDATE = #{meetingDate},
		TITLE =
		#{title},
		AUTHOR = #{author},
		ATTEND = #{attend},
		OVERVIEW = #{overview},
		CONTENT = #{content}
		WHERE ID = #{id}
	</update>

	<!-- 회의 삭제 -->
	<delete id="deleteMeeting" parameterType="int">
		DELETE FROM MEETING
		WHERE ID = #{id}
	</delete>

	<select id="selectProjectManagers" parameterType="string"
		resultType="string">
		SELECT PROJECT_MANAGER
		FROM PROJECT
		WHERE PROJECT_ID =
		#{projectId}
	</select>

	<select id="selectMeetingStatus" parameterType="int"
		resultType="string">
		SELECT STATUS
		FROM MEETING
		WHERE ID = #{id}
	</select>

	<update id="updateMeetingStatus" parameterType="map">
		UPDATE MEETING
		SET STATUS = #{status}
		WHERE ID = #{id}
	</update>

</mapper>
